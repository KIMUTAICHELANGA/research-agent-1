services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - r_service
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 20s
      retries: 3

  r_service:
    container_name: r_service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # FastAPI
      - "8501:8501"  # Streamlit
      - "8787:8787"  # RStudio
    volumes:
      - .:/app
      - content-data:/data
      - ~/.aws:/root/.aws
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - HOME=/root
      - PANDOC_DIR=/root/.pandoc
      - PASSWORD=rstudiopassword  # RStudio password
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8787 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: >
      sh -c "
        /init &
        uvicorn app:app --host 0.0.0.0 --port 8000 &
        streamlit run main.py --server.address=0.0.0.0 --server.port=8501 &
        wait
      "
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 4G
    shm_size: '2gb'

volumes:
  content-data:
    driver: local

networks:
  app-network:
    driver: bridge
    name: research-network