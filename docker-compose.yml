services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx 
    networks:
      - app-network


  research-server:
    container_name: research-server
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - content-data:/data
      - ~/.aws:/root/.aws
    ports:
      - "8000:8000"
      - "8501:8501"
      - "5678:5678"
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 20s
      retries: 7
      start_period: 40s
    command: >
      sh -c "
        uvicorn app:app --host 0.0.0.0 --port 8000 &
        streamlit run main.py --server.address=0.0.0.0 --server.port=8501 &
        wait
      "
    networks:
      - app-network

  rstudio:
    container_name: rstudio
    image: rocker/rstudio
    ports:
      - "8787:8787"
    environment:
      - PASSWORD=rstudiopassword
    volumes:
      - ./R:/home/rstudio/projects
      - content-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      research-server:
        condition: service_healthy
    networks:
      - app-network

  r_service:
    container_name: r_service
    build:
      context: ./r_service
      dockerfile: Dockerfile.r
    volumes:
      - ./r_service:/app
      - content-data:/data
      - ~/.aws:/root/.aws
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
    networks:
      - app-network
    depends_on:
      research-server:
        condition: service_healthy

volumes:
  content-data:
    driver: local

networks:
  app-network:
    driver: bridge